// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username    String   @unique
  displayName String
  accountId   String   @unique
  thumbnail   String   @default("https://firebasestorage.googleapis.com/v0/b/noteit-36706.appspot.com/o/users%2Fdefault.jpg?alt=media&token=d19a223b-10b8-447e-9a66-5198d5e71ec1") @db.Text
  createdOn   DateTime @default(now())

  notes     Note[]
  comments  Comment[]
  notebooks Membership[]
  votes     Vote[]
}

model Notebook {
  name        String   @unique
  thumbnail   String   @default("https://firebasestorage.googleapis.com/v0/b/noteit-36706.appspot.com/o/notebooks%2Fdefault.jpeg?alt=media&token=2242dc8e-6046-469f-ac64-66be05435a07") @db.Text
  createdOn   DateTime @default(now())
  description String?

  notes   Note[]
  members Membership[]
}

model Note {
  id           String   @id @default(uuid())
  username     String
  notebookName String
  content      String   @db.Text
  title        String
  createdOn    DateTime @default(now())

  user     User      @relation(fields: [username], references: [username])
  notebook Notebook  @relation(fields: [notebookName], references: [name])
  comments Comment[]
  votes    Vote[]
}

model Comment {
  id        String   @id @default(uuid())
  username  String
  noteId    String
  content   String
  createdOn DateTime @default(now())

  user User @relation(fields: [username], references: [username])
  note Note @relation(fields: [noteId], references: [id])
}

model Membership {
  username     String
  notebookName String
  role         Roles  @default(USER)

  user     User     @relation(fields: [username], references: [username])
  notebook Notebook @relation(fields: [notebookName], references: [name])

  @@unique([username, notebookName])
}

model Vote {
  username String
  noteId   String
  value    Int

  user User @relation(fields: [username], references: [username])
  note Note @relation(fields: [noteId], references: [id])

  @@unique([username, noteId])
}

enum Roles {
  USER
  MODERATOR
  OWNER
}
